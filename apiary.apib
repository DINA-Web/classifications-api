FORMAT: 1A
 
# classification-api

Classification api defines interface for taxonomy module

## species [/species]

### Get species [GET]

>#### Request: /species 
 + Context
    + locale
 + Query parameters
    + UUID
    + canonicalName 
     
 + Response 200 (application/json) 
 
        {
            "meta" : {
                "resultLanguages" : locale,
                "apiVersion" : "0",
                "callDate" : "Jun 12, 2016 at 16.37.49",    
                "resultCount" : 2,
                "contentLicenses" : null,
                "callEndpoint" : "https://server/classifications/version/species?name={canonicalName}&uuid={uuid}", 
                "statusCode" : 200,
                "maintenanceContact" : "admin@dina-system.org",
                "supportedLanguages" : [
                    "GB_en",
                    "SE_sv"
                ]
            },
            "data" : [
                {
                    "id" : 4,
                    "type" : "taxon",
                    "attributes" : {  
                        "id" : "4"
                    } 
                },
                {
                    "id" : 5,
                    "type" : "taxon", 
                    "attributes" : { 
                        "id" : "5", 
                    }
                }  
            ] 
        }
        
        
 

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }